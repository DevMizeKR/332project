syntax = "proto3";

package project332;

service Communicate {
  rpc Connecting (ConnectionRequest) returns (ConnectionResponse) {}
  rpc Sampling (SamplingRequest) returns (SamplingResponse) {}
  rpc ShufflingReady (ShufflingServerRequest) returns (ShufflingServerResponse) {}
  rpc ShufflingCompleted (ShufflingCompletedRequest) returns (ShufflingCompletedResponse) {}
  rpc MergingCompleted (MergingCompletedRequest) returns (MergingCompletedResponse) {}
}

message ConnectionRequest {
  string ipAddress = 1;
}

message ConnectionResponse {
  bool isConnected = 1;
  int32 id = 2;
}

message SamplingRequest {
  int32 id = 1;
  bytes data = 2;
}

message SamplingResponse {
  message KeyRange {
    bytes lowerBound = 1;
    bytes upperBound = 2;
  }
  bool isChecked = 1;
  map<int32, KeyRange> idKeyRange = 2;
}

message ShufflingServerRequest {
  int32 id = 1;
  int32 port = 2;
}

message ShufflingServerResponse {
  bool isChecked = 1;
  map<int32, string> idPort = 2;
}

message  ShufflingCompletedRequest {
  int32 id = 1;
  int32 num = 2;
}

message  ShufflingCompletedResponse {
  bool  success = 1;
  int32 startIndex = 2;
  int32 length = 3;
}

message MergingCompletedRequest {
  int32 id = 1;
}

message MergingCompletedResponse {
  bool  success = 1;
}

service Shuffle {
  rpc Shuffling (stream ShufflingRequest) returns (stream ShufflingResponse) {}
}

message ShufflingRequest {
  bytes data = 1;
}

message ShufflingResponse {
  bool isChecked = 1;
}